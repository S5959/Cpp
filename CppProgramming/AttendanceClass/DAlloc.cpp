// 선행처리기 지시어를 통해 C++ 표준 입출력 라이브러리를 포함합니다.
#include <iostream>

// 'using' 구문을 사용하여 std 네임스페이스의 모든 요소를 명칭공간을 지정하지 않고 사용할 수 있습니다.
using namespace std;

// main 함수는 프로그램의 진입점입니다.
int main()
{
    // int형 포인터 변수를 선언합니다.
    int *intPtr;

    // new 연산자를 사용하여 4개의 int값을 저장할 공간을 할당합니다.
    intPtr = new int[4];

    // 할당된 메모리의 첫번째 저장공간에 10을 넣습니다.
    *intPtr = 10;
    // 할당된 메모리의 2번째 저장공간에 20을 넣습니다.
    // '*' 표기의 포인터가 연산자 '+' 보다 우선 순위가 높으므로 () 괄호를 사용합니다.
    *(intPtr + 1) = 20;
    // 배열 표기법을 사용하여 intPtr의 3번째 공간에 30을 넣습니다. 
    // *(intPtr+2) = 30; 과 동일합니다.
    intPtr[2] = 30;
    // intPtr의 4번째 공간에 40을 넣습니다.
    intPtr[3] = 40;

    // 임의의 포인터 p에 intPtr로부터 시작하여 4개의 연속된 메모리 공간의 값을 출력합니다.
    for (int *p = intPtr, i = 0; i < 4; i++)
        // 현재 p가 가리키는 메모리 공간의 값을 출력하고, p를 다음 메모리 공간의 주소를 가리키도록 합니다.
        cout << *p++ << " ";

    // 개행 문자를 출력합니다.
    cout << endl;

    // delete 연산자를 사용하여 사용이 끝난 intPtr가 가리키는 공간은 시스템에 반납합니다.
    delete [] intPtr;
    // intPtr를 nullptr로 지정하여 포인터가 가리키는 곳이 없도록 합니다.
    intPtr = nullptr;
    
    // return은 함수를 종료하고 0을 반환합니다.
    return 0;
}
